# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/colorcloud',
                'doc_host': 'https://AIR-UFG.github.io',
                'git_url': 'https://github.com/AIR-UFG/colorcloud',
                'lib_path': 'colorcloud'},
  'syms': { 'colorcloud.UFGsim2024infufg': { 'colorcloud.UFGsim2024infufg.ProjectionSimToPointCloud': ( '2024infufg.html#projectionsimtopointcloud',
                                                                                                        'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimToPointCloud.__init__': ( '2024infufg.html#projectionsimtopointcloud.__init__',
                                                                                                                 'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimToPointCloud.forward': ( '2024infufg.html#projectionsimtopointcloud.forward',
                                                                                                                'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimTransform': ( '2024infufg.html#projectionsimtransform',
                                                                                                     'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimTransform.__init__': ( '2024infufg.html#projectionsimtransform.__init__',
                                                                                                              'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimTransform.forward': ( '2024infufg.html#projectionsimtransform.forward',
                                                                                                             'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimVizTransform': ( '2024infufg.html#projectionsimviztransform',
                                                                                                        'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimVizTransform.__init__': ( '2024infufg.html#projectionsimviztransform.__init__',
                                                                                                                 'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimVizTransform.forward': ( '2024infufg.html#projectionsimviztransform.forward',
                                                                                                                'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionSimVizTransform.scale': ( '2024infufg.html#projectionsimviztransform.scale',
                                                                                                              'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionToTensorTransformSim': ( '2024infufg.html#projectiontotensortransformsim',
                                                                                                             'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.ProjectionToTensorTransformSim.forward': ( '2024infufg.html#projectiontotensortransformsim.forward',
                                                                                                                     'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM': ( '2024infufg.html#semanticsegmentationsimldm',
                                                                                                         'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM.__init__': ( '2024infufg.html#semanticsegmentationsimldm.__init__',
                                                                                                                  'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM.predict_dataloader': ( '2024infufg.html#semanticsegmentationsimldm.predict_dataloader',
                                                                                                                            'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM.setup': ( '2024infufg.html#semanticsegmentationsimldm.setup',
                                                                                                               'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM.test_dataloader': ( '2024infufg.html#semanticsegmentationsimldm.test_dataloader',
                                                                                                                         'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM.train_dataloader': ( '2024infufg.html#semanticsegmentationsimldm.train_dataloader',
                                                                                                                          'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.SemanticSegmentationSimLDM.val_dataloader': ( '2024infufg.html#semanticsegmentationsimldm.val_dataloader',
                                                                                                                        'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.UFGSimDataset': ( '2024infufg.html#ufgsimdataset',
                                                                                            'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.UFGSimDataset.__getitem__': ( '2024infufg.html#ufgsimdataset.__getitem__',
                                                                                                        'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.UFGSimDataset.__init__': ( '2024infufg.html#ufgsimdataset.__init__',
                                                                                                     'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.UFGSimDataset.__len__': ( '2024infufg.html#ufgsimdataset.__len__',
                                                                                                    'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.UFGSimDataset.learning_remap': ( '2024infufg.html#ufgsimdataset.learning_remap',
                                                                                                           'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.UFGSimDataset.set_transform': ( '2024infufg.html#ufgsimdataset.set_transform',
                                                                                                          'colorcloud/UFGsim2024infufg.py'),
                                             'colorcloud.UFGsim2024infufg.plot_projections': ( '2024infufg.html#plot_projections',
                                                                                               'colorcloud/UFGsim2024infufg.py')},
            'colorcloud.behley2019iccv': { 'colorcloud.behley2019iccv.ProjectionToTensorTransform': ( 'behley2019iccv.html#projectiontotensortransform',
                                                                                                      'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionToTensorTransform.forward': ( 'behley2019iccv.html#projectiontotensortransform.forward',
                                                                                                              'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionTransform': ( 'behley2019iccv.html#projectiontransform',
                                                                                              'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionTransform.__init__': ( 'behley2019iccv.html#projectiontransform.__init__',
                                                                                                       'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionTransform.forward': ( 'behley2019iccv.html#projectiontransform.forward',
                                                                                                      'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionVizTransform': ( 'behley2019iccv.html#projectionviztransform',
                                                                                                 'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionVizTransform.__init__': ( 'behley2019iccv.html#projectionviztransform.__init__',
                                                                                                          'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionVizTransform.forward': ( 'behley2019iccv.html#projectionviztransform.forward',
                                                                                                         'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.ProjectionVizTransform.scale': ( 'behley2019iccv.html#projectionviztransform.scale',
                                                                                                       'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticKITTIDataset': ( 'behley2019iccv.html#semantickittidataset',
                                                                                               'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticKITTIDataset.__getitem__': ( 'behley2019iccv.html#semantickittidataset.__getitem__',
                                                                                                           'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticKITTIDataset.__init__': ( 'behley2019iccv.html#semantickittidataset.__init__',
                                                                                                        'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticKITTIDataset.__len__': ( 'behley2019iccv.html#semantickittidataset.__len__',
                                                                                                       'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticKITTIDataset.learning_remap': ( 'behley2019iccv.html#semantickittidataset.learning_remap',
                                                                                                              'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticKITTIDataset.set_transform': ( 'behley2019iccv.html#semantickittidataset.set_transform',
                                                                                                             'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM': ( 'behley2019iccv.html#semanticsegmentationldm',
                                                                                                  'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM.__init__': ( 'behley2019iccv.html#semanticsegmentationldm.__init__',
                                                                                                           'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM.predict_dataloader': ( 'behley2019iccv.html#semanticsegmentationldm.predict_dataloader',
                                                                                                                     'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM.setup': ( 'behley2019iccv.html#semanticsegmentationldm.setup',
                                                                                                        'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM.test_dataloader': ( 'behley2019iccv.html#semanticsegmentationldm.test_dataloader',
                                                                                                                  'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM.train_dataloader': ( 'behley2019iccv.html#semanticsegmentationldm.train_dataloader',
                                                                                                                   'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SemanticSegmentationLDM.val_dataloader': ( 'behley2019iccv.html#semanticsegmentationldm.val_dataloader',
                                                                                                                 'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SphericalProjection': ( 'behley2019iccv.html#sphericalprojection',
                                                                                              'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SphericalProjection.__init__': ( 'behley2019iccv.html#sphericalprojection.__init__',
                                                                                                       'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.SphericalProjection.get_xy_projections': ( 'behley2019iccv.html#sphericalprojection.get_xy_projections',
                                                                                                                 'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.UnfoldingProjection': ( 'behley2019iccv.html#unfoldingprojection',
                                                                                              'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.UnfoldingProjection.__init__': ( 'behley2019iccv.html#unfoldingprojection.__init__',
                                                                                                       'colorcloud/behley2019iccv.py'),
                                           'colorcloud.behley2019iccv.UnfoldingProjection.get_xy_projections': ( 'behley2019iccv.html#unfoldingprojection.get_xy_projections',
                                                                                                                 'colorcloud/behley2019iccv.py')},
            'colorcloud.biasutti2019riu': { 'colorcloud.biasutti2019riu.Block': ( 'biasutti2019riu.html#block',
                                                                                  'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Block.__init__': ( 'biasutti2019riu.html#block.__init__',
                                                                                           'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Block.init_params': ( 'biasutti2019riu.html#block.init_params',
                                                                                              'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Decoder': ( 'biasutti2019riu.html#decoder',
                                                                                    'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Decoder.__init__': ( 'biasutti2019riu.html#decoder.__init__',
                                                                                             'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Decoder.forward': ( 'biasutti2019riu.html#decoder.forward',
                                                                                            'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Encoder': ( 'biasutti2019riu.html#encoder',
                                                                                    'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Encoder.__init__': ( 'biasutti2019riu.html#encoder.__init__',
                                                                                             'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.Encoder.forward': ( 'biasutti2019riu.html#encoder.forward',
                                                                                            'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.RIUNet': ( 'biasutti2019riu.html#riunet',
                                                                                   'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.RIUNet.__init__': ( 'biasutti2019riu.html#riunet.__init__',
                                                                                            'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.RIUNet.forward': ( 'biasutti2019riu.html#riunet.forward',
                                                                                           'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.RIUNet.init_params': ( 'biasutti2019riu.html#riunet.init_params',
                                                                                               'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask': ( 'biasutti2019riu.html#semanticsegmentationtask',
                                                                                                     'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.__init__': ( 'biasutti2019riu.html#semanticsegmentationtask.__init__',
                                                                                                              'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.configure_optimizers': ( 'biasutti2019riu.html#semanticsegmentationtask.configure_optimizers',
                                                                                                                          'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.forward': ( 'biasutti2019riu.html#semanticsegmentationtask.forward',
                                                                                                             'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.manual_optimization': ( 'biasutti2019riu.html#semanticsegmentationtask.manual_optimization',
                                                                                                                         'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.on_train_epoch_end': ( 'biasutti2019riu.html#semanticsegmentationtask.on_train_epoch_end',
                                                                                                                        'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.step': ( 'biasutti2019riu.html#semanticsegmentationtask.step',
                                                                                                          'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.training_step': ( 'biasutti2019riu.html#semanticsegmentationtask.training_step',
                                                                                                                   'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.SemanticSegmentationTask.validation_step': ( 'biasutti2019riu.html#semanticsegmentationtask.validation_step',
                                                                                                                     'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.UpConv': ( 'biasutti2019riu.html#upconv',
                                                                                   'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.UpConv.__init__': ( 'biasutti2019riu.html#upconv.__init__',
                                                                                            'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.UpConv.init_params': ( 'biasutti2019riu.html#upconv.init_params',
                                                                                               'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.log_activations': ( 'biasutti2019riu.html#log_activations',
                                                                                            'colorcloud/biasutti2019riu.py'),
                                            'colorcloud.biasutti2019riu.log_imgs': ( 'biasutti2019riu.html#log_imgs',
                                                                                     'colorcloud/biasutti2019riu.py')},
            'colorcloud.chen2020mvlidarnet': { 'colorcloud.chen2020mvlidarnet.ConvBNReLU': ( 'chen2020mvlidarnet.html#convbnrelu',
                                                                                             'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.ConvBNReLU.__init__': ( 'chen2020mvlidarnet.html#convbnrelu.__init__',
                                                                                                      'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.ConvBNReLU.init_params': ( 'chen2020mvlidarnet.html#convbnrelu.init_params',
                                                                                                         'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Decoder': ( 'chen2020mvlidarnet.html#decoder',
                                                                                          'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Decoder.__init__': ( 'chen2020mvlidarnet.html#decoder.__init__',
                                                                                                   'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Decoder.forward': ( 'chen2020mvlidarnet.html#decoder.forward',
                                                                                                  'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Decoder.init_params': ( 'chen2020mvlidarnet.html#decoder.init_params',
                                                                                                      'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Encoder': ( 'chen2020mvlidarnet.html#encoder',
                                                                                          'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Encoder.__init__': ( 'chen2020mvlidarnet.html#encoder.__init__',
                                                                                                   'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.Encoder.forward': ( 'chen2020mvlidarnet.html#encoder.forward',
                                                                                                  'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.InceptionBlock': ( 'chen2020mvlidarnet.html#inceptionblock',
                                                                                                 'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.InceptionBlock.__init__': ( 'chen2020mvlidarnet.html#inceptionblock.__init__',
                                                                                                          'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.InceptionV2': ( 'chen2020mvlidarnet.html#inceptionv2',
                                                                                              'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.InceptionV2.__init__': ( 'chen2020mvlidarnet.html#inceptionv2.__init__',
                                                                                                       'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.InceptionV2.forward': ( 'chen2020mvlidarnet.html#inceptionv2.forward',
                                                                                                      'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.MVLidarNet': ( 'chen2020mvlidarnet.html#mvlidarnet',
                                                                                             'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.MVLidarNet.__init__': ( 'chen2020mvlidarnet.html#mvlidarnet.__init__',
                                                                                                      'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.MVLidarNet.forward': ( 'chen2020mvlidarnet.html#mvlidarnet.forward',
                                                                                                     'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask': ( 'chen2020mvlidarnet.html#semanticsegmentationtask',
                                                                                                           'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.__init__': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.__init__',
                                                                                                                    'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.configure_optimizers': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.configure_optimizers',
                                                                                                                                'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.forward': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.forward',
                                                                                                                   'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.manual_optimization': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.manual_optimization',
                                                                                                                               'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.on_train_epoch_end': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.on_train_epoch_end',
                                                                                                                              'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.step': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.step',
                                                                                                                'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.training_step': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.training_step',
                                                                                                                         'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.SemanticSegmentationTask.validation_step': ( 'chen2020mvlidarnet.html#semanticsegmentationtask.validation_step',
                                                                                                                           'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.log_activations': ( 'chen2020mvlidarnet.html#log_activations',
                                                                                                  'colorcloud/chen2020mvlidarnet.py'),
                                               'colorcloud.chen2020mvlidarnet.log_imgs': ( 'chen2020mvlidarnet.html#log_imgs',
                                                                                           'colorcloud/chen2020mvlidarnet.py')}}}
